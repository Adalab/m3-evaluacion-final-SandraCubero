{"version":3,"sources":["components/DataFromServer.js","components/CharacterCard.js","components/CharacterList.js","components/FilterCharacters.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["getDataFromServer","fetch","then","response","json","picStyle","height","CharacterCard","props","src","character","image","alt","name","style","species","CharacterList","className","characters","length","map","key","id","to","listCharacters","handleChange","ev","inputText","target","value","handleFilter","FilterCharacters","type","filterText","onChange","bind","CharacterDetail","selectedCharacter","toLowerCase","title","origin","episode","status","App","state","renderDetail","filterSearch","setState","results","this","filter","includes","selectedId","parseInt","match","params","exact","path","render","Fragment","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d3bd2110.chunk.js","sourcesContent":["const apiUrl =\n  'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst getDataFromServer = () => {\n  return fetch(apiUrl).then(response => response.json());\n};\n\nexport default getDataFromServer;\n","import React from 'react';\nconst picStyle = {\n  height : '200px'\n}\nconst CharacterCard = props => {\n  return (\n    <div>\n      <img src={props.character.image} alt={props.character.name} style={picStyle} />\n      <p>{props.character.name}</p>\n      <p>{props.character.species}</p>\n    </div>\n  );\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\n\nconst listCharacters = props => {\n  return props.characters ? (\n    props.characters.length > 0 ? (\n      props.characters.map(character => {\n        return (\n          <li key={character.id}>\n            <Link to={`/detail/${character.id}`}>\n              <CharacterCard character={character} />\n            </Link>\n          </li>\n        );\n      })\n    ) : (\n      <p>¡Vaya! No hay resultados.</p>\n    )\n  ) : (\n    <p>Cargando...</p>\n  );\n};\n\nconst CharacterList = props => {\n  return <ul className=\"list\">{listCharacters(props)}</ul>;\n};\n\nexport default CharacterList;\n","import React from 'react';\n\nconst handleChange = (props, ev) => {\n  const inputText = ev.target.value;\n  return props.handleFilter(inputText);\n};\n\nconst FilterCharacters = props => {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={props.filterText}\n        onChange={handleChange.bind(null, props)}\n      />\n    </div>\n  );\n};\n\nexport default FilterCharacters;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n  return props.selectedCharacter ? (\n    <div>\n      <Link to={'/'}>\n        <p>&lt; Volver</p>\n      </Link>\n      <img\n        src={props.selectedCharacter.image}\n        alt={props.selectedCharacter.name}\n      />\n      <p>Nombre: {props.selectedCharacter.name}</p>\n      <p>Especie: {props.selectedCharacter.species.toLowerCase() === 'human' ? <span>Human <i className=\"fas fa-child\" title='Human'></i></span> : <span>Alien <i className=\"fab fa-reddit-alien\" title='Alien'></i></span>}</p>\n      \n      <p>Planeta de origen: {props.selectedCharacter.origin.name}</p>\n      <p>Número de episodios: {props.selectedCharacter.episode.length}</p>\n      <p>Estado: {props.selectedCharacter.status.toLowerCase()=== 'alive' ? <i className=\"fas fa-heartbeat\" title='Alive'></i> : props.selectedCharacter.status.toLowerCase()=== 'dead' ? <i className=\"fas fa-skull-crossbones\" title='Dead'></i> : <i className=\"fas fa-question\" title='Unknown'></i> }</p>\n    </div>\n  ) : (\n    'Cargando...'\n  );\n};\n\nexport default CharacterDetail;\n","import React from 'react';\nimport '../App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport getDataFromServer from './DataFromServer';\nimport CharacterList from './CharacterList';\nimport FilterCharacters from './FilterCharacters';\nimport CharacterDetail from './CharacterDetail';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      filterText: ''\n    };\n    this.handleFilter = this.handleFilter.bind(this);\n    this.renderDetail = this.renderDetail.bind(this);\n    this.filterSearch = this.filterSearch.bind(this);\n  }\n  componentDidMount() {\n    getDataFromServer().then(characters =>\n      this.setState({ characters: characters.results })\n    );\n  }\n  handleFilter(inputText) {\n    this.setState({\n      filterText: inputText\n    });\n  }\n\n  filterSearch() {\n    let filteredCharacters =\n      this.state.filterText === ''\n        ? this.state.characters\n        : this.state.characters.filter(character =>\n            character.name\n              .toLowerCase()\n              .includes(this.state.filterText.toLowerCase())\n          );\n    return filteredCharacters;\n  }\n\n  renderDetail(props) {\n    const selectedId = parseInt(props.match.params.id);\n    let selectedCharacter;\n    for (const character of this.state.characters) {\n      if (parseInt(character.id) === selectedId) {\n        selectedCharacter = character;\n      }\n    }\n    return <CharacterDetail selectedCharacter={selectedCharacter} />;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Link to={'/'}>\n          <header className=\"header\"></header>\n        </Link>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <React.Fragment>\n                <FilterCharacters\n                  handleFilter={this.handleFilter}\n                  filterText={this.state.filterText}\n                />\n                <CharacterList\n                  characters={this.filterSearch()}\n                  filterText={this.state.filterText}\n                />\n              </React.Fragment>\n            )}\n          />\n          <Route path=\"/detail/:id\" render={this.renderDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}