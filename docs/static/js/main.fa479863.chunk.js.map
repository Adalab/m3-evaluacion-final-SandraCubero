{"version":3,"sources":["services/DataFromServer.js","components/FilterCharacters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","components/NotFound.js","components/App.js","index.js"],"names":["getDataFromServer","fetch","then","response","json","handleChange","props","ev","inputText","target","value","handleFilter","FilterCharacters","className","type","filterText","onChange","bind","placeholder","CharacterCard","character","image","name","species","src","alt","CharacterList","characters","length","map","key","id","to","listCharacters","Home","Fragment","CharacterDetail","selectedCharacter","toLowerCase","title","origin","episode","status","NotFound","App","state","filterSearch","renderDetail","renderHome","setState","results","this","filter","includes","selectedId","parseInt","match","params","exact","path","render","component","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fa479863.chunk.js","sourcesContent":["const apiUrl =\n  'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst getDataFromServer = () => {\n  return fetch(apiUrl).then(response => response.json());\n};\n\nexport default getDataFromServer;\n","import React from 'react';\nimport '../stylesheets/_filterCharacters.scss'\nimport PropTypes from 'prop-types';\n\nconst handleChange = (props, ev) => {\n  const inputText = ev.target.value;\n  return props.handleFilter(inputText);\n};\n\nconst FilterCharacters = props => {\n  return (\n    <div className='input_container'>\n      <input\n        type=\"text\"\n        value={props.filterText}\n        onChange={handleChange.bind(null, props)}\n        className='input'\n        placeholder='Who are you looking for?'\n      />\n    </div>\n  );\n};\n\nFilterCharacters.propTypes = {\n  handleFilter: PropTypes.func,\n  filterText: PropTypes.string\n};\n\nexport default FilterCharacters;\n","import React from 'react';\nimport '../stylesheets/_characterCard.scss';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n  const { image, name, species } = props.character;\n  return (\n    <div className=\"card\">\n      <img src={image} alt={name} className=\"card_img\"/>\n      <div className=\"card_text-container\">\n        <p className=\"card_title\">{name}</p>\n        <p className=\"card_text\">{species}</p>\n      </div>\n    </div>\n  );\n};\n\nCharacterCard.propTypes = {\n  character: PropTypes.object\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport '../stylesheets/_characterList.scss'\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst listCharacters = props => {\n  return props.characters ? (\n    props.characters.length > 0 ? (\n      props.characters.map(character => {\n        return (\n          <li className='card' key={character.id}>\n            <Link className='link' to={`/detail/${character.id}`}>\n              <CharacterCard character={character} />\n            </Link>\n          </li>\n        );\n      })\n    ) : (\n      <p>Ops! There aren't results. Try with another name</p>\n    )\n  ) : (\n    <p>Loading...</p>\n  );\n};\n\nconst CharacterList = props => {\n  return <ul className=\"list\">{listCharacters(props)}</ul>;\n};\n\nlistCharacters.propTypes = {\n  characters: PropTypes.array\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport FilterCharacters from './FilterCharacters';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  return (\n    <React.Fragment>\n      <FilterCharacters\n        handleFilter={props.handleFilter}\n        filterText={props.filterText}\n      />\n      <CharacterList\n        characters={props.characters}\n      />\n    </React.Fragment>\n  );\n};\n\nHome.propTypes = {\n  characters: PropTypes.array,\n  handleFilter: PropTypes.func,\n  filterhText: PropTypes.string\n}\n\nexport default Home;\n","import React from 'react';\nimport '../stylesheets/_characterDetail.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = props => {\n  return props.selectedCharacter ? (\n    <div className=\"container\">\n      <Link className=\"link\" to={'/'}>\n        <p>&lt; Back</p>\n      </Link>\n      <div className=\"detail\">\n        <img\n          src={props.selectedCharacter.image}\n          alt={props.selectedCharacter.name}\n        />\n        <div className=\"detail_description\">\n          <p>Name: {props.selectedCharacter.name}</p>\n          <p>\n            Species:{' '}\n            {props.selectedCharacter.species.toLowerCase() === 'human' ? (\n              <span>\n                Human <i className=\"fas fa-child\" title=\"Human\"></i>\n              </span>\n            ) : (\n              <span>\n                Alien <i className=\"fab fa-reddit-alien\" title=\"Alien\"></i>\n              </span>\n            )}\n          </p>\n\n          <p>Origin: {props.selectedCharacter.origin.name}</p>\n          <p>Episodes: {props.selectedCharacter.episode.length}</p>\n          <p>\n            Status:{' '}\n            {props.selectedCharacter.status.toLowerCase() === 'alive' ? (\n              <i className=\"fas fa-heartbeat\" title=\"Alive\"></i>\n            ) : props.selectedCharacter.status.toLowerCase() === 'dead' ? (\n              <i className=\"fas fa-skull-crossbones\" title=\"Dead\"></i>\n            ) : (\n              <i className=\"fas fa-question\" title=\"Unknown\"></i>\n            )}\n          </p>\n        </div>\n      </div>\n   </div>\n  ) : (\n    <div>\n      <p>Loading...</p>\n      <Link className=\"link_2\" to={'/'}>\n        <p>&lt; Back to list</p>\n      </Link>\n    </div>\n  );\n};\n\nCharacterDetail.propTypes = {\n  selectedCharacter: PropTypes.object\n};\n\nexport default CharacterDetail;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (<p>Ops! It seems the page you're looking for doesn't exist.</p>)\n}\n\nexport default NotFound;","import React from 'react';\nimport '../stylesheets/App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport getDataFromServer from '../services/DataFromServer';\nimport Home from './Home';\nimport CharacterDetail from './CharacterDetail';\nimport NotFound from './NotFound';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      filterText: ''\n    };\n    this.handleFilter = this.handleFilter.bind(this);\n    this.filterSearch = this.filterSearch.bind(this);\n    this.renderDetail = this.renderDetail.bind(this);\n    this.renderHome = this.renderHome.bind(this);\n  }\n  componentDidMount() {\n    getDataFromServer().then(characters =>\n      this.setState({ characters: characters.results })\n    );\n  }\n  handleFilter(inputText) {\n    this.setState({\n      filterText: inputText\n    });\n  }\n\n  filterSearch() {\n    let filteredCharacters =\n      this.state.filterText === ''\n        ? this.state.characters\n        : this.state.characters.filter(character =>\n            character.name\n              .toLowerCase()\n              .includes(this.state.filterText.toLowerCase())\n          );\n    return filteredCharacters;\n  }\n\n  renderHome() {\n    return (\n      <Home\n        handleFilter={this.handleFilter}\n        filterText={this.state.filterText}\n        characters={this.filterSearch()}\n      />\n    );\n  }\n\n  renderDetail(props) {\n    const selectedId = parseInt(props.match.params.id);\n    let selectedCharacter;\n    for (const character of this.state.characters) {\n      if (parseInt(character.id) === selectedId) {\n        selectedCharacter = character;\n      }\n    }\n    return <CharacterDetail selectedCharacter={selectedCharacter} />;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Link to={'/'}>\n          <header className=\"header\"></header>\n        </Link>\n        <Switch>\n          <Route exact path=\"/\" render={this.renderHome} />\n          <Route path=\"/detail/:id\" render={this.renderDetail} />\n          <Route path=\"*\" component={NotFound}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}